# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
#    branches: [ "main" ]
    tags: [ "v*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Run-build-linkparse-on-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Compile lnkparse.exe
        shell: pwsh
        run: |
          tree /f
          mkdir bin
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release  -S ..\vendor ..
          cmake --build . --target lnkparse --config Release -j 9
          tree /f
          move bin\Release\lnkparse.exe ..\bin
          cd ..
          dir bin
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: linkparse
          retention-days: 1
          path: |
            bin/lnkparse.exe
  
  Run-build-script-on-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Generate install.sh
        run: |
          if ! command -v argbash >/dev/null 2>&1; then 
            wget https://codeload.github.com/matejak/argbash/tar.gz/refs/tags/2.10.0 -O argbash-2.10.0.tar.gz
            tar -xvf argbash-2.10.0.tar.gz
            mv argbash-2.10.0 /opt/
            export PATH=$PATH:/opt/argbash-2.10.0/bin
          fi
          mkdir -p bin
          argbash install.m4 -o bin/install.sh
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: install
          retention-days: 1
          path: |
            bin/install.sh

  Run-archive-on-ubuntu:
    runs-on: ubuntu-latest
    needs: 
      - Run-build-script-on-ubuntu
      - Run-build-linkparse-on-windows
    env:
      PKG_NAME: "embedding-miniforge"
    steps:
      - name: Download lnkparse
        uses: actions/download-artifact@v3
        with:
          name: linkparse
      - name: Download install.sh
        uses: actions/download-artifact@v3
        with:
          name: install
      - name: Archive package
        run: |
          mkdir -p "${PKG_NAME}/"
          ls -lh ./
          cp lnkparse.exe install.sh "${PKG_NAME}/"
          tar -czvf "${PKG_NAME}.tgz" "${PKG_NAME}"
          zip -r "${PKG_NAME}.zip" "${PKG_NAME}"
      - name: Test
        run: 
          ls -lh ./${PKG_NAME}.*
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repository: ok-dok/embedding-miniforge
          files: |
            ${PKG_NAME}.tgz
            ${PKG_NAME}.zip
