# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Run-build-linkparse-on-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Run compile linkparse.exe
        shell: pwsh
        run: |
          tree /f
          mkdir bin
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release  -S ..\vendor ..
          cmake --build . --target lnkparse --config Release -j 9
          tree /f
          move bin\Release\lnkparse.exe ..\bin
          cd ..
          dir bin
  
  Run-argbash-gen-on-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run generate install.sh
        run: |
          if ! command -v argbash >/dev/null 2>&1; then yum install -y argbash; fi
          mkdir -p bin
          argbash install.m4 -o bin/install.sh

  Run-archive-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run archive package
        run: |
          PKG_NAME="embedding-py-conda"
          mkdir -p "${PKG_NAME}/bin"
          ls -lh bin
          cp bin/lnkparse.exe bin/install-python.sh "${PKG_NAME}/bin"
          tar -czvf "${PKG_NAME}.tgz" "${PKG_NAME}"
